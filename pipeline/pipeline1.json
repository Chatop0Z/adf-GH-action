{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Lake 0 Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Select top (0) * FROM dbo.Customer",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "LakehouseTableSink",
						"tableActionOption": "Append",
						"partitionOption": "None"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SourceSQL",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "Customer"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkLakeTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "CustomerEmp",
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							},
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lake 1 Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "LakehouseTableSink",
						"tableActionOption": "Append",
						"partitionOption": "None"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SourceSQL",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "Product"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkLakeTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "Product",
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							},
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "File_to_Lake",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": "TEMP",
							"wildcardFileName": "*",
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "LakehouseWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						}
					},
					"enableStaging": false,
					"skipErrorFile": {
						"fileMissing": false,
						"dataInconsistency": false
					},
					"validateDataConsistency": true
				},
				"inputs": [
					{
						"referenceName": "SourceSta",
						"type": "DatasetReference",
						"parameters": {
							"FolderPath": "TEMP",
							"FileName": " "
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkLakeAll",
						"type": "DatasetReference",
						"parameters": {
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							},
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lake Append to 0 Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "LakehouseTableSink",
						"tableActionOption": "Append",
						"partitionOption": "None"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SourceSQL",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "Customer"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkLakeTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "Customer",
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							},
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "File_to_Lake_File",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lake_to_Lake",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "LakehouseWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						}
					},
					"enableStaging": false,
					"skipErrorFile": {
						"dataInconsistency": false
					},
					"validateDataConsistency": true
				},
				"inputs": [
					{
						"referenceName": "SourceSta",
						"type": "DatasetReference",
						"parameters": {
							"FolderPath": "TEMP",
							"FileName": "CustomerData.csv"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkLakeFile",
						"type": "DatasetReference",
						"parameters": {
							"FolderPath": "Input",
							"FileName": "CustomerData.csv",
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							},
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lake_to_Lake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lake_File_to_LakeTable",
						"dependencyConditions": [
							"Completed"
						]
					},
					{
						"activity": "Lake_File_to_LakeTable_copy1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "LakehouseReadSettings",
							"recursive": true,
							"wildcardFolderPath": "Input",
							"wildcardFileName": "CustomerData*",
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "LakehouseWriteSettings",
							"copyBehavior": "PreserveHierarchy"
						}
					},
					"enableStaging": false,
					"skipErrorFile": {
						"fileMissing": false,
						"dataInconsistency": false
					},
					"validateDataConsistency": true
				},
				"inputs": [
					{
						"referenceName": "SinkLakeFile",
						"type": "DatasetReference",
						"parameters": {
							"FolderPath": "Input",
							"FileName": " ",
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							},
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkLakeFile",
						"type": "DatasetReference",
						"parameters": {
							"FolderPath": "Processed",
							"FileName": "CustomerData.csv",
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							},
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lake_File_to_LakeTable",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "LakehouseReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "LakehouseTableSink",
						"tableActionOption": "Append"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CustomerID",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "FirstName",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "LastName",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "DateOfBirth",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "DateOfBirth",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Email",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "PhoneNumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PhoneNumber",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "CreatedAt",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CreatedAt",
									"physicalType": "string"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "LakeCSV",
						"type": "DatasetReference",
						"parameters": {
							"FolderPath": "Input",
							"Filename": "CustomerData.csv",
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							},
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkLakeTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "TEST",
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							},
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lake_File_to_LakeTable_copy1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "LakehouseReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "LakehouseTableSink",
						"tableActionOption": "OverwriteSchema",
						"partitionOption": "None"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "CustomerID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CustomerID",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "FirstName",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "LastName",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "DateOfBirth",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "DateOfBirth",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Email",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "PhoneNumber",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "PhoneNumber",
									"physicalType": "string"
								}
							},
							{
								"source": {
									"name": "CreatedAt",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "CreatedAt",
									"physicalType": "string"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "LakeCSV",
						"type": "DatasetReference",
						"parameters": {
							"FolderPath": "Input",
							"Filename": "CustomerData.csv",
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							},
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkLakeTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "TEST_1",
							"Lakehouse_ID": {
								"value": "@pipeline().globalParameters.Lakehouse_ID",
								"type": "Expression"
							},
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Ware 0 Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select top(1) * FROM dbo.customer",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "WarehouseSink",
						"allowCopyCommand": true,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "sta",
							"type": "LinkedServiceReference"
						},
						"path": "staging",
						"enableCompression": false
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "CustomerID",
									"type": "Int32"
								},
								"sink": {
									"name": "CustomerID",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String"
								},
								"sink": {
									"name": "FirstName",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String"
								},
								"sink": {
									"name": "LastName",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "DateOfBirth",
									"type": "DateTime"
								},
								"sink": {
									"name": "DateOfBirth",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Email",
									"type": "String"
								},
								"sink": {
									"name": "Email",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PhoneNumber",
									"type": "String"
								},
								"sink": {
									"name": "PhoneNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CreatedAt",
									"type": "DateTime"
								},
								"sink": {
									"name": "CreatedAt",
									"type": "DateTime"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SourceSQL",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "Customer"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkWarehouse",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "Customer",
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							},
							"Warehouse_ID": {
								"value": "@pipeline().globalParameters.Warehouse_ID",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Ware 1 Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "WarehouseSink",
						"allowCopyCommand": true,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "sta",
							"type": "LinkedServiceReference"
						},
						"path": "staging",
						"enableCompression": true
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "ProductID",
									"type": "Int32"
								},
								"sink": {
									"name": "ProductID",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "ProductName",
									"type": "String"
								},
								"sink": {
									"name": "ProductName",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Category",
									"type": "String"
								},
								"sink": {
									"name": "Category",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Price",
									"type": "Decimal"
								},
								"sink": {
									"name": "Price",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "StockQuantity",
									"type": "Int32"
								},
								"sink": {
									"name": "StockQuantity",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "CreatedAt",
									"type": "DateTime"
								},
								"sink": {
									"name": "CreatedAt",
									"type": "DateTime"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "SourceSQL",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": {
								"value": "@pipeline().parameters.Table",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SinkWarehouse",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "stg",
							"TableName": "Product",
							"Fabric_workspace_ID": {
								"value": "@pipeline().globalParameters.Fabric_workspace_ID",
								"type": "Expression"
							},
							"Warehouse_ID": {
								"value": "@pipeline().globalParameters.Warehouse_ID",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"Table": {
				"type": "string",
				"defaultValue": "Product"
			}
		},
		"annotations": []
	}
}